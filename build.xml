<project>


    <!-- Using ant build.xml to spawn and kill process, since spawning
       a process with gradle is not so straightforward.
       Also, the production servers are AWS EC2 micro-instances, and are
       severely resource constrained.  Using ant for this
        avoids having to install and run gradle on prod servers
    -->

    <property name="jar.name" value="kanban-now-card-service-2-fat.jar" />


	<target name="runSpawned" >
        <exec executable="java" osfamily="unix" spawn="true" >
            <env key="JAVA_OPTS" value="${javaOpts}"/>
            <arg value="-jar"/>
            <arg value="${jar.name}"/>
            <arg value="server"/>
            <arg value="card-service-2.yml"/>
        </exec>


        <waitfor maxwait="1" maxwaitunit="minute" checkevery="500" timeoutproperty="timedout">
            <http url="http://localhost:9593/healthcheck"/>
        </waitfor>

        <fail if="timedout" message="Timed out waiting healthcheck to pass" />


	</target>

	<target name="stopServer">
        <exec executable="pkill" osfamily="unix" spawn="false" >
            <arg value="-f"/>
            <arg value="${jar.name}"/>
        </exec>

        <!-- Hack sleep.  Should instead put in explicit check that server stopped -->
        <sleep seconds="3"/>

    </target>

</project>
